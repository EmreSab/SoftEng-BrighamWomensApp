on: [push, pull_request]
jobs:
  # Set the job key. The key is displayed as the job name
  # when a job name is not provided
  gradle-check:
    # Name the Job
    name: Run Gradle Checks
    # Set the type of machine to run on
    runs-on: ubuntu-latest

    # service containers to run with `postgres-job`
    services:
      # label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:latest
        # service environment variables
        # `POSTGRES_HOST` is `postgres`
        env:
          # optional (defaults to `postgres`)
          POSTGRES_DB: postgres
          # required
          POSTGRES_PASSWORD: R%RjT0^TH353
          # optional (defaults to `5432`)
          POSTGRES_PORT: 5432
          # optional (defaults to `postgres`)
          POSTGRES_USER: testing
        ports:
          # maps tcp port 5432 on service container to the host
          - 5432:5432
        # set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v3
      with:
        java-version: 17
        distribution: microsoft
        java-package: jdk
    - name: Run headless test
      uses: GabrielBB/xvfb-action@v1
      with:
        run: ./gradlew check